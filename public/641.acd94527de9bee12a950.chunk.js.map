{"version":3,"file":"641.acd94527de9bee12a950.chunk.js","mappings":"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","sources":["webpack://tweb/webpack/runtime/compat","webpack://tweb/./src/environment/ctx.ts","webpack://tweb/./src/environment/userAgent.ts","webpack://tweb/./src/environment/canUseTransferables.ts","webpack://tweb/./src/lib/rlottie/applyReplacements.ts","webpack://tweb/./src/lib/rlottie/rlottie.worker.ts","webpack://tweb/./src/helpers/blob/readBlobAsText.ts","webpack://tweb/./src/helpers/blob/readBlobAs.ts"],"sourcesContent":["(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = {};\n    var countMap = {};\n    var getRetryDelay = function () {\n      return 3000;\n    };\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result +\n        (queryMap.hasOwnProperty(chunkId) ? '?' + queryMap[chunkId] : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.hasOwnProperty(chunkId)\n          ? countMap[chunkId]\n          : 999999;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 999999 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          var retryAttempt = 999999 - retries + 1;\n          setTimeout(function () {\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (function () {\n              return Date.now();\n            })();\n            +retryAttemptString;\n            queryMap[chunkId] = cacheBust;\n            countMap[chunkId] = retries - 1;\n            resolve(__webpack_require__.e(chunkId));\n          }, getRetryDelay(retryAttempt));\n        });\n      });\n    };\n  }\n})();\n","const ctx = typeof(window) !== 'undefined' ? window : self;\r\n\r\nexport default ctx;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from './ctx';\r\n\r\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\r\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\r\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\r\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n// https://stackoverflow.com/a/58065241\r\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\r\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\r\n  !(ctx as any).MSStream;\r\n\r\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\r\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\r\n\r\nexport const IS_MOBILE = /* screen.width && screen.width < 480 ||  */navigator.maxTouchPoints > 0 && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\r\n","import { IS_SAFARI } from \"./userAgent\";\r\n\r\n/*\r\n * This is used as a workaround for a memory leak in Safari caused by using Transferable objects to\r\n * transfer data between WebWorkers and the main thread.\r\n * https://github.com/mapbox/mapbox-gl-js/issues/8771\r\n *\r\n * This should be removed once the underlying Safari issue is fixed.\r\n */\r\n\r\nlet CAN_USE_TRANSFERABLES: boolean;\r\nif(!IS_SAFARI) CAN_USE_TRANSFERABLES = true;\r\nelse {\r\n  try {\r\n    const match = navigator.userAgent.match(/Version\\/(.+?) /);\r\n    CAN_USE_TRANSFERABLES = +match[1] >= 14;\r\n  } catch(err) {\r\n    CAN_USE_TRANSFERABLES = false;\r\n  }\r\n}\r\n\r\nexport default CAN_USE_TRANSFERABLES;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// https://github.com/telegramdesktop/tdesktop/blob/97d8ee75d51874fcb74a9bfadc79f835c82be54a/Telegram/SourceFiles/chat_helpers/stickers_emoji_pack.cpp#L46\r\nconst COLORREPLACEMENTS = [\r\n  [\r\n    [0xf77e41, 0xcb7b55],\r\n    [0xffb139, 0xf6b689],\r\n    [0xffd140, 0xffcda7],\r\n    [0xffdf79, 0xffdfc5],\r\n  ],\r\n\r\n  [\r\n    [0xf77e41, 0xa45a38],\r\n    [0xffb139, 0xdf986b],\r\n    [0xffd140, 0xedb183],\r\n    [0xffdf79, 0xf4c3a0],\r\n  ],\r\n\r\n  [\r\n    [0xf77e41, 0x703a17],\r\n    [0xffb139, 0xab673d],\r\n    [0xffd140, 0xc37f4e],\r\n    [0xffdf79, 0xd89667],\r\n  ],\r\n\r\n  [\r\n    [0xf77e41, 0x4a2409],\r\n    [0xffb139, 0x7d3e0e],\r\n    [0xffd140, 0x965529],\r\n    [0xffdf79, 0xa96337],\r\n  ],\r\n\r\n  [\r\n    [0xf77e41, 0x200f0a],\r\n    [0xffb139, 0x412924],\r\n    [0xffd140, 0x593d37],\r\n    [0xffdf79, 0x63453f],\r\n  ]\r\n];\r\n\r\nlet convert = (value: number) => {\r\n\treturn Math.round(Math.min(Math.max(value, 0), 1) * 255);\r\n};\r\n\r\ntype LottieShape = {\r\n  c: {\r\n    k: number[]\r\n  },\r\n  ty: 'st' | 'fl',\r\n  it?: LottieShape[]\r\n};\r\n\r\nexport default function applyReplacements(object: {\r\n  layers: Array<{shapes: LottieShape[]}>\r\n}, toneIndex: number) {\r\n  const replacements = COLORREPLACEMENTS[Math.max(toneIndex - 1, 0)];\r\n\r\n  const applyTo = (smth: LottieShape) => {\r\n    const k = smth.c.k;\r\n    const color = convert(k[2]) | (convert(k[1]) << 8) | (convert(k[0]) << 16);\r\n\r\n    const foundReplacement = replacements.find((p) => p[0] === color);\r\n    if(foundReplacement) {\r\n      k[0] = ((foundReplacement[1] >> 16) & 255) / 255;\r\n      k[1] = ((foundReplacement[1] >> 8) & 255) / 255;\r\n      k[2] = (foundReplacement[1] & 255) / 255;\r\n    }\r\n\r\n    //console.log('foundReplacement!', foundReplacement, color.toString(16), k);\r\n  };\r\n\r\n  const checkSmth = (smth: LottieShape) => {\r\n    switch(smth.ty) {\r\n      case 'st':\r\n      case 'fl':\r\n        applyTo(smth);\r\n        break;\r\n    }\r\n\r\n    if(smth.hasOwnProperty('it')) {\r\n      iterateIt(smth.it);\r\n    }\r\n  };\r\n\r\n  const iterateIt = (it: LottieShape['it']) => {\r\n    for(const smth of it) {\r\n      checkSmth(smth);\r\n    }\r\n  };\r\n\r\n  try {\r\n    for(const layer of object.layers) {\r\n      if(!layer.shapes) continue;\r\n\r\n      for(const shape of layer.shapes) {\r\n        if(!shape.it) {\r\n          checkSmth(shape);\r\n          continue;\r\n        }\r\n\r\n        iterateIt(shape.it);\r\n      }\r\n    }\r\n  } catch(err) {\r\n    console.warn('cant apply replacements', err, object, toneIndex);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport CAN_USE_TRANSFERABLES from \"../../environment/canUseTransferables\";\r\nimport readBlobAsText from \"../../helpers/blob/readBlobAsText\";\r\nimport applyReplacements from \"./applyReplacements\";\r\n\r\nimportScripts('rlottie-wasm.js');\r\n//import Module, { allocate, intArrayFromString } from './rlottie-wasm';\r\n\r\nconst _Module = (self as any).Module as any;\r\n\r\nconst DEFAULT_FPS = 60;\r\n\r\ntype LottieHandlePointer = number;\r\n\r\n// throw new Error('test');\r\n\r\nexport class RLottieItem {\r\n  private stringOnWasmHeap: number;\r\n  private handle: LottieHandlePointer;\r\n  private frameCount: number;\r\n  private fps: number;\r\n\r\n  private dead: boolean;\r\n  //private context: OffscreenCanvasRenderingContext2D;\r\n\r\n  constructor(\r\n    private reqId: number, \r\n    private width: number, \r\n    private height: number/* , \r\n    private canvas: OffscreenCanvas */\r\n  ) {\r\n\r\n  }\r\n\r\n  public init(json: string, fps: number) {\r\n    if(this.dead) {\r\n      return;\r\n    }\r\n\r\n    this.fps = Math.max(1, Math.min(60, fps || DEFAULT_FPS));\r\n\r\n    //this.context = canvas.getContext('2d');\r\n    /* let frame = 0;\r\n    setInterval(() => {\r\n      if(frame >= this.frameCount) frame = 0;\r\n      let _frame = frame++;\r\n      this.render(_frame, null);\r\n    }, 1000 / this.fps); */\r\n\r\n    try {\r\n      this.handle = worker.Api.init();\r\n  \r\n      // @ts-ignore\r\n      this.stringOnWasmHeap = allocate(intArrayFromString(json), 'i8', 0);\r\n  \r\n      this.frameCount = worker.Api.loadFromData(this.handle, this.stringOnWasmHeap);\r\n  \r\n      worker.Api.resize(this.handle, this.width, this.height);\r\n\r\n      reply('loaded', this.reqId, this.frameCount, this.fps);\r\n    } catch(e) {\r\n      console.error('init RLottieItem error:', e);\r\n      reply('error', this.reqId, e);\r\n    }\r\n  }\r\n\r\n  public render(frameNo: number, clamped?: Uint8ClampedArray) {\r\n    if(this.dead || this.handle === undefined) return;\r\n    //return;\r\n  \r\n    if(this.frameCount < frameNo || frameNo < 0) {\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      worker.Api.render(this.handle, frameNo);\r\n  \r\n      const bufferPointer = worker.Api.buffer(this.handle);\r\n  \r\n      const data = _Module.HEAPU8.subarray(bufferPointer, bufferPointer + (this.width * this.height * 4));\r\n  \r\n      if(!clamped) {\r\n        clamped = new Uint8ClampedArray(data);\r\n      } else {\r\n        clamped.set(data);\r\n      }\r\n\r\n      //this.context.putImageData(new ImageData(clamped, this.width, this.height), 0, 0);\r\n  \r\n      reply('frame', this.reqId, frameNo, clamped);\r\n    } catch(e) {\r\n      console.error('Render error:', e);\r\n      this.dead = true;\r\n      reply('error', this.reqId, e);\r\n    }\r\n  }\r\n\r\n  public destroy() {\r\n    this.dead = true;\r\n\r\n    if(this.handle !== undefined) {\r\n      worker.Api.destroy(this.handle);\r\n    }\r\n  }\r\n}\r\n\r\nclass RLottieWorker {\r\n  public Api: {\r\n    init: () => LottieHandlePointer,\r\n    destroy: (handle: LottieHandlePointer) => void,\r\n    resize: (handle: LottieHandlePointer, width: number, height: number) => void,\r\n    buffer: (handle: LottieHandlePointer) => number,\r\n    render: (handle: LottieHandlePointer, frameNo: number) => void,\r\n    loadFromData: (handle: LottieHandlePointer, bufferPointer: number) => number\r\n  } = {} as any;\r\n\r\n  public initApi() {\r\n    this.Api = {\r\n      init: _Module.cwrap('lottie_init', '', []),\r\n      destroy: _Module.cwrap('lottie_destroy', '', ['number']),\r\n      resize: _Module.cwrap('lottie_resize', '', ['number', 'number', 'number']),\r\n      buffer: _Module.cwrap('lottie_buffer', 'number', ['number']),\r\n      render: _Module.cwrap('lottie_render', '', ['number', 'number']),\r\n      loadFromData: _Module.cwrap('lottie_load_from_data', 'number', ['number', 'number']),\r\n    };\r\n  }\r\n\r\n  public init() {\r\n    this.initApi();\r\n    reply('ready');\r\n  }\r\n}\r\n\r\nconst worker = new RLottieWorker();\r\n\r\n_Module.onRuntimeInitialized = function() {\r\n  worker.init();\r\n};\r\n\r\nconst items: {[reqId: string]: RLottieItem} = {};\r\nconst queryableFunctions = {\r\n  loadFromData: function(reqId: number, blob: Blob, width: number, height: number, toneIndex: number/* , canvas: OffscreenCanvas */) {\r\n    const item = items[reqId] = new RLottieItem(reqId, width, height/* , canvas */);\r\n    readBlobAsText(blob).then((json) => {\r\n      try {\r\n        if(typeof(toneIndex) === 'number' && toneIndex >= 1 && toneIndex <= 5) {\r\n          /* params.animationData = copy(params.animationData);\r\n          this.applyReplacements(params.animationData, toneIndex); */\r\n\r\n          const newAnimationData = JSON.parse(json);\r\n          applyReplacements(newAnimationData, toneIndex);\r\n          json = JSON.stringify(newAnimationData);\r\n        }\r\n\r\n        // ! WARNING, с этой проверкой не все стикеры работают, например - ДУРКА\r\n        /* if(!/\"tgs\":\\s*?1./.test(jsString)) {\r\n          throw new Error('Invalid file');\r\n        } */\r\n\r\n        /* let perf = performance.now();\r\n        let json = JSON.parse(jsString);\r\n        console.log('sticker decode:', performance.now() - perf); */\r\n\r\n        const match = json.match(/\"fr\":\\s*?(\\d+?),/);\r\n        const frameRate = +match?.[1] || DEFAULT_FPS;\r\n\r\n        //console.log('Rendering sticker:', reqId, frameRate, 'now rendered:', Object.keys(items).length);\r\n\r\n        item.init(json, frameRate);\r\n      } catch(err) {\r\n        console.error('Invalid file for sticker:', json);\r\n        reply('error', reqId, err);\r\n      }\r\n    });\r\n  },\r\n  destroy: function(reqId: number) {\r\n    const item = items[reqId];\r\n    if(!item) {\r\n      return;\r\n    }\r\n\r\n    item.destroy();\r\n    delete items[reqId];\r\n  },\r\n  renderFrame: function(reqId: number, frameNo: number, clamped?: Uint8ClampedArray) {\r\n    //console.log('worker renderFrame', reqId, frameNo, clamped);\r\n    items[reqId].render(frameNo, clamped);\r\n  }\r\n};\r\n\r\nfunction reply(...args: any[]) {\r\n  if(arguments.length < 1) { \r\n    throw new TypeError('reply - not enough arguments'); \r\n  }\r\n\r\n  //if(arguments[0] === 'frame') return;\r\n\r\n  args = Array.prototype.slice.call(arguments, 1);\r\n\r\n  if(!CAN_USE_TRANSFERABLES) {\r\n    postMessage({queryMethodListener: arguments[0], queryMethodArguments: args});\r\n  } else {\r\n    const transfer: ArrayBuffer[] = [];\r\n    for(let i = 0; i < args.length; ++i) {\r\n      if(args[i] instanceof ArrayBuffer) {\r\n        transfer.push(args[i]);\r\n      }\r\n  \r\n      if(args[i].buffer && args[i].buffer instanceof ArrayBuffer) {\r\n        transfer.push(args[i].buffer);\r\n      }\r\n    }\r\n\r\n    postMessage({queryMethodListener: arguments[0], queryMethodArguments: args}, transfer);\r\n  }\r\n}\r\n\r\nonmessage = function(e) {\r\n  // @ts-ignore\r\n  queryableFunctions[e.data.queryMethod].apply(queryableFunctions, e.data.queryMethodArguments);\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport readBlobAs from \"./readBlobAs\";\r\n\r\nexport default function readBlobAsText(blob: Blob) {\r\n  return readBlobAs(blob, 'readAsText');\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// import { IS_WEB_WORKER } from \"../context\";\r\n\r\n// const id = IS_WEB_WORKER ? Math.random() * 0x1000 | 0 : 0;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsText'): Promise<string>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsDataURL'): Promise<string>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>;\r\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer' | 'readAsText' | 'readAsDataURL'): Promise<any> {\r\n  // const perf = performance.now();\r\n  return new Promise<any>((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('loadend', (e) => {\r\n      // console.log(`readBlobAs [${id}] ${method} time ${performance.now() - perf}`);\r\n      resolve(e.target.result);\r\n    });\r\n    reader[method](blob);\r\n  });\r\n}\r\n"],"names":["__webpack_require__","oldGetScript","u","oldLoadScript","e","queryMap","countMap","chunkId","hasOwnProperty","catch","error","retries","realSrc","message","request","Promise","resolve","setTimeout","cacheBust","Date","now","window","self","USER_AGENT","navigator","userAgent","IS_SAFARI","search","toLowerCase","indexOf","test","vendor","platform","maxTouchPoints","match","CAN_USE_TRANSFERABLES","err","COLORREPLACEMENTS","convert","value","Math","round","min","max","importScripts","_Module","Module","RLottieItem","constructor","reqId","width","height","init","json","fps","this","dead","handle","worker","Api","stringOnWasmHeap","allocate","intArrayFromString","frameCount","loadFromData","resize","reply","console","render","frameNo","clamped","undefined","bufferPointer","buffer","data","HEAPU8","subarray","set","Uint8ClampedArray","destroy","initApi","cwrap","onRuntimeInitialized","items","queryableFunctions","blob","toneIndex","item","method","reader","FileReader","addEventListener","target","result","readBlobAs","readBlobAsText","then","newAnimationData","JSON","parse","object","replacements","checkSmth","smth","ty","k","c","color","foundReplacement","find","p","applyTo","iterateIt","it","layer","layers","shapes","shape","warn","applyReplacements","stringify","frameRate","renderFrame","args","arguments","length","TypeError","Array","prototype","slice","call","transfer","i","ArrayBuffer","push","postMessage","queryMethodListener","queryMethodArguments","onmessage","queryMethod","apply"],"sourceRoot":""}