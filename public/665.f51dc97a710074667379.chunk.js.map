{"version":3,"file":"665.f51dc97a710074667379.chunk.js","mappings":"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","sources":["webpack://tweb/./src/components/checkboxField.ts","webpack://tweb/./src/components/countryInputField.ts","webpack://tweb/./src/components/scrollable.ts","webpack://tweb/./src/components/telInputField.ts","webpack://tweb/./src/helpers/dom/findUpTag.ts","webpack://tweb/./src/helpers/dom/placeCaretAtEnd.ts","webpack://tweb/./src/helpers/dom/toggleDisability.ts","webpack://tweb/./src/helpers/formatPhoneNumber.ts","webpack://tweb/./src/helpers/object/getDeepProperty.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ripple from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport getDeepProperty from \"../helpers/object/getDeepProperty\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport apiManagerProxy from \"../lib/mtproto/mtprotoworker\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n  listenerSetter?: ListenerSetter\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.classList.add('checkbox-field-input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      let loaded = false;\r\n      const onChange = () => {\r\n        if(!loaded) {\r\n          return;\r\n        }\r\n\r\n        let value: any;\r\n        if(options.stateValues) {\r\n          value = options.stateValues[input.checked ? 1 : 0];\r\n        } else {\r\n          value = input.checked;\r\n        }\r\n\r\n        rootScope.managers.appStateManager.setByKey(options.stateKey, value);\r\n      };\r\n\r\n      apiManagerProxy.getState().then((state) => {\r\n        loaded = true;\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n      });\r\n\r\n      if(options.listenerSetter) options.listenerSetter.add(input)('change', onChange);\r\n      else input.addEventListener('change', onChange);\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    /* if(this.checked === checked) {\r\n      return;\r\n    } */\r\n    \r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport IS_EMOJI_SUPPORTED from \"../environment/emojiSupport\";\r\nimport cancelEvent from \"../helpers/dom/cancelEvent\";\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport findUpTag from \"../helpers/dom/findUpTag\";\r\nimport replaceContent from \"../helpers/dom/replaceContent\";\r\nimport setInnerHTML from \"../helpers/dom/setInnerHTML\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport { randomLong } from \"../helpers/random\";\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport I18n, { i18n } from \"../lib/langPack\";\r\nimport wrapEmojiText from \"../lib/richTextProcessor/wrapEmojiText\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { getCountryEmoji } from \"../vendor/emoji\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\nimport Scrollable from \"./scrollable\";\r\n\r\nlet countries: HelpCountry.helpCountry[]; \r\nconst setCountries = () => {\r\n  countries = I18n.countriesList\r\n  .filter((country) => !country.pFlags?.hidden)\r\n  .sort((a, b) => (a.name || a.default_name).localeCompare(b.name || b.default_name));\r\n};\r\n\r\nlet init = () => {\r\n  setCountries();\r\n  rootScope.addEventListener('language_change', () => {\r\n    setCountries();\r\n  });\r\n};\r\n\r\nexport default class CountryInputField extends InputField {\r\n  private lastCountrySelected: HelpCountry;\r\n  private lastCountryCodeSelected: HelpCountryCode;\r\n\r\n  private hideTimeout: number;\r\n  private selectWrapper: HTMLElement;\r\n\r\n  private liMap: Map<string, HTMLLIElement[]>;\r\n\r\n  constructor(public options: InputFieldOptions & {\r\n    onCountryChange?: (country: HelpCountry.helpCountry, code: HelpCountryCode.helpCountryCode) => void,\r\n    noPhoneCodes?: boolean\r\n  } = {}) {\r\n    super({\r\n      label: 'Country',\r\n      name: randomLong(),\r\n      ...options,\r\n    });\r\n\r\n    if(init) {\r\n      init();\r\n      init = undefined;\r\n    }\r\n\r\n    this.liMap = new Map();\r\n\r\n    this.container.classList.add('input-select');\r\n\r\n    const selectWrapper = this.selectWrapper = document.createElement('div');\r\n    selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\r\n\r\n    const arrowDown = document.createElement('span');\r\n    arrowDown.classList.add('arrow', 'arrow-down');\r\n    this.container.append(arrowDown);\r\n\r\n    const selectList = document.createElement('ul');\r\n    selectWrapper.appendChild(selectList);\r\n\r\n    const scroll = new Scrollable(selectWrapper);\r\n\r\n    let initSelect = () => {\r\n      initSelect = null;\r\n  \r\n      countries.forEach((c) => {\r\n        const emoji = getCountryEmoji(c.iso2);\r\n  \r\n        const liArr: Array<HTMLLIElement> = [];\r\n        for(let i = 0, length = Math.min(c.country_codes.length, options.noPhoneCodes ? 1 : Infinity); i < length; ++i) {\r\n          const countryCode = c.country_codes[i];\r\n          const li = document.createElement('li');\r\n  \r\n          let wrapped = wrapEmojiText(emoji);\r\n          if(IS_EMOJI_SUPPORTED) {\r\n            const spanEmoji = document.createElement('span');\r\n            setInnerHTML(spanEmoji, wrapped);\r\n            li.append(spanEmoji);\r\n          } else {\r\n            setInnerHTML(li, wrapped);\r\n          }\r\n          \r\n          const el = i18n(c.default_name as any);\r\n          el.dataset.defaultName = c.default_name;\r\n          li.append(el);\r\n  \r\n          if(!options.noPhoneCodes) {\r\n            const span = document.createElement('span');\r\n            span.classList.add('phone-code');\r\n            span.innerText = '+' + countryCode.country_code;\r\n            li.appendChild(span);\r\n          }\r\n\r\n          liArr.push(li);\r\n          selectList.append(li);\r\n        }\r\n  \r\n        this.liMap.set(c.iso2, liArr);\r\n      });\r\n      \r\n      selectList.addEventListener('mousedown', (e) => {\r\n        if(e.button !== 0) { // other buttons but left shall not pass\r\n          return;\r\n        }\r\n        \r\n        const target = findUpTag(e.target, 'LI')\r\n        this.selectCountryByTarget(target);\r\n        //console.log('clicked', e, countryName, phoneCode);\r\n      });\r\n  \r\n      this.container.appendChild(selectWrapper);\r\n    };\r\n\r\n    initSelect();\r\n\r\n    this.input.addEventListener('focus', (e) => {\r\n      if(initSelect) {\r\n        initSelect();\r\n      } else {\r\n        countries.forEach((c) => {\r\n          this.liMap.get(c.iso2).forEach((li) => li.style.display = '');\r\n        });\r\n      }\r\n\r\n      clearTimeout(this.hideTimeout);\r\n      this.hideTimeout = undefined;\r\n\r\n      selectWrapper.classList.remove('hide');\r\n      void selectWrapper.offsetWidth; // reflow\r\n      selectWrapper.classList.add('active');\r\n\r\n      this.select();\r\n\r\n      fastSmoothScroll({\r\n        // container: page.pageEl.parentElement.parentElement, \r\n        container: findUpClassName(this.container, 'scrollable-y'),\r\n        element: this.input, \r\n        position: 'start', \r\n        margin: 4\r\n      });\r\n\r\n      setTimeout(() => {\r\n        if(!mouseDownHandlerAttached) {\r\n          document.addEventListener('mousedown', onMouseDown, {capture: true});\r\n          mouseDownHandlerAttached = true;\r\n        }\r\n      }, 0);\r\n    });\r\n\r\n    let mouseDownHandlerAttached = false;\r\n    const onMouseDown = (e: MouseEvent) => {\r\n      if(findUpClassName(e.target, 'input-select')) {\r\n        return;\r\n      }\r\n      if(e.target === this.input) {\r\n        return;\r\n      }\r\n\r\n      this.hidePicker();\r\n      document.removeEventListener('mousedown', onMouseDown, {capture: true});\r\n      mouseDownHandlerAttached = false;\r\n    };\r\n\r\n    /* false && this.input.addEventListener('blur', function(this: typeof this.input, e) {\r\n      hidePicker();\r\n      \r\n      e.cancelBubble = true;\r\n    }, {capture: true}); */\r\n\r\n    const onKeyPress = (e: KeyboardEvent) => {\r\n      const key = e.key;\r\n      if(e.ctrlKey || key === 'Control') return false;\r\n\r\n      //let i = new RegExp('^' + this.value, 'i');\r\n      let _value = this.value.toLowerCase();\r\n      let matches: HelpCountry[] = [];\r\n      countries.forEach((c) => {\r\n        const names = [\r\n          c.name, \r\n          c.default_name,\r\n          c.iso2\r\n        ];\r\n\r\n        names.filter(Boolean).forEach((name) => {\r\n          const abbr = name.split(' ').filter((word) => /\\w/.test(word)).map((word) => word[0]).join('');\r\n          if(abbr.length > 1) {\r\n            names.push(abbr);\r\n          }\r\n        });\r\n\r\n        let good = !!names.filter(Boolean).find((str) => str.toLowerCase().indexOf(_value) !== -1)/*  === 0 */;//i.test(c.name);\r\n\r\n        this.liMap.get(c.iso2).forEach((li) => li.style.display = good ? '' : 'none');\r\n        if(good) matches.push(c);\r\n      });\r\n\r\n      // Код ниже автоматически выберет страну если она осталась одна при поиске\r\n      /* if(matches.length === 1 && matches[0].li.length === 1) {\r\n        if(matches[0].name === lastCountrySelected) return false;\r\n        //console.log('clicking', matches[0]);\r\n\r\n        var clickEvent = document.createEvent('MouseEvents');\r\n        clickEvent.initEvent('mousedown', true, true);\r\n        matches[0].li[0].dispatchEvent(clickEvent);\r\n        return false;\r\n      } else  */if(matches.length === 0) {\r\n        countries.forEach((c) => {\r\n          this.liMap.get(c.iso2).forEach((li) => li.style.display = '');\r\n        });\r\n      } else if(matches.length === 1 && key === 'Enter') {\r\n        cancelEvent(e);\r\n        this.selectCountryByTarget(this.liMap.get(matches[0].iso2)[0]);\r\n      }\r\n    };\r\n\r\n    this.input.addEventListener('keyup', onKeyPress);\r\n    this.input.addEventListener('keydown', (e) => {\r\n      if(e.key === 'Enter') {\r\n        onKeyPress(e);\r\n      }\r\n    });\r\n\r\n    arrowDown.addEventListener('mousedown', (e) => {\r\n      if(this.input.matches(':focus')) {\r\n        this.hidePicker();\r\n        this.input.blur();\r\n      } else {\r\n        e.cancelBubble = true;\r\n        e.preventDefault();\r\n        this.input.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSelected() {\r\n    return {country: this.lastCountrySelected, code: this.lastCountryCodeSelected};\r\n  }\r\n\r\n  public hidePicker = () => {\r\n    if(this.hideTimeout !== undefined) return;\r\n    this.selectWrapper.classList.remove('active');\r\n    this.hideTimeout = window.setTimeout(() => {\r\n      this.selectWrapper.classList.add('hide');\r\n      this.hideTimeout = undefined;\r\n    }, 200);\r\n  }\r\n\r\n  public selectCountryByTarget = (target: HTMLElement) => {\r\n    const defaultName = target.querySelector<HTMLElement>('[data-default-name]').dataset.defaultName;\r\n    const phoneCodeEl = target.querySelector<HTMLElement>('.phone-code');\r\n    const phoneCode = phoneCodeEl?.innerText;\r\n    const countryCode = phoneCode && phoneCode.replace(/\\D/g, '');\r\n\r\n    replaceContent(this.input, i18n(defaultName as any));\r\n    simulateEvent(this.input, 'input');\r\n    this.lastCountrySelected = countries.find((c) => c.default_name === defaultName);\r\n    this.lastCountryCodeSelected = countryCode && this.lastCountrySelected.country_codes.find((_countryCode) => _countryCode.country_code === countryCode);\r\n    \r\n    this.options.onCountryChange?.(this.lastCountrySelected, this.lastCountryCodeSelected);\r\n    this.hidePicker();\r\n  }\r\n\r\n  public selectCountryByIso2(iso2: string) {\r\n    this.selectCountryByTarget(this.liMap.get(iso2)[0]);\r\n  }\r\n\r\n  public override(country: HelpCountry, code: HelpCountryCode, countryName?: string) {\r\n    replaceContent(this.input, country ? i18n(country.default_name as any) : countryName);\r\n    this.lastCountrySelected = country;\r\n    this.lastCountryCodeSelected = code;\r\n    this.options.onCountryChange?.(this.lastCountrySelected, this.lastCountryCodeSelected);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport IS_TOUCH_SUPPORTED from \"../environment/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { ScrollOptions } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport cancelEvent from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach((_el) => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver((entries) => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public splitUp: HTMLElement;\r\n  public onScrollMeasure: number = 0;\r\n\r\n  public lastScrollPosition: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public onAdditionalScroll: () => void;\r\n  public onScrolledTop: () => void;\r\n  public onScrolledBottom: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  public checkForTriggers?: () => void;\r\n\r\n  public scrollProperty: 'scrollTop' | 'scrollLeft';\r\n  \r\n  protected removeHeavyAnimationListener: () => void;\r\n  protected addedScrollListener: boolean;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach((c) => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  public addScrollListener() {\r\n    if(this.addedScrollListener) {\r\n      return;\r\n    }\r\n\r\n    this.addedScrollListener = true;\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n  }\r\n  \r\n  public removeScrollListener() {\r\n    if(!this.addedScrollListener) {\r\n      return;\r\n    }\r\n\r\n    this.addedScrollListener = false;\r\n    this.container.removeEventListener('scroll', this.onScroll, {capture: true});\r\n  }\r\n\r\n  public setListeners() {\r\n    if(this.removeHeavyAnimationListener) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.addScrollListener();\r\n\r\n    this.removeHeavyAnimationListener = useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.cancelMeasure();\r\n        this.needCheckAfterAnimation = true;\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public removeListeners() {\r\n    if(!this.removeHeavyAnimationListener) {\r\n      return;\r\n    }\r\n\r\n    window.removeEventListener('resize', this.onScroll);\r\n    this.removeScrollListener();\r\n\r\n    this.removeHeavyAnimationListener();\r\n    this.removeHeavyAnimationListener = undefined;\r\n  }\r\n\r\n  public destroy() {\r\n    this.removeListeners();\r\n    this.onAdditionalScroll = undefined;\r\n    this.onScrolledTop = undefined;\r\n    this.onScrolledBottom = undefined;\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(options: Omit<ScrollOptions, 'container'>) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll({\r\n      ...options,\r\n      container: this.container\r\n    });\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    // return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.cancelMeasure();\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) return;\r\n    // if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    // this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n    this.onScrollMeasure = window.setTimeout(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollPosition = this.container[this.scrollProperty];\r\n      this.lastScrollDirection = this.lastScrollPosition === scrollPosition ? 0 : (this.lastScrollPosition < scrollPosition ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollPosition = scrollPosition;\r\n\r\n      // lastScrollDirection check is useless here, every callback should decide on its own\r\n      if(this.onAdditionalScroll/*  && this.lastScrollDirection !== 0 */) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    // });\r\n    }, 200);\r\n  };\r\n\r\n  public cancelMeasure() {\r\n    if(this.onScrollMeasure) {\r\n      // window.cancelAnimationFrame(this.onScrollMeasure);\r\n      clearTimeout(this.onScrollMeasure);\r\n      this.onScrollMeasure = 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public padding: HTMLElement;\r\n  \r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach((c) => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n    this.scrollProperty = 'scrollTop';\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollPosition;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n\r\n  public setScrollTopSilently(value: number) {\r\n    this.lastScrollPosition = value;\r\n    this.ignoreNextScrollEvent();\r\n\r\n    this.scrollTop = value;\r\n  }\r\n\r\n  public ignoreNextScrollEvent() {\r\n    if(this.removeHeavyAnimationListener) {\r\n      this.removeScrollListener();\r\n      this.container.addEventListener('scroll', (e) => {\r\n        cancelEvent(e);\r\n        this.addScrollListener();\r\n      }, {capture: true, passive: false, once: true});\r\n    }\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n\r\n    this.scrollProperty = 'scrollLeft';\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\r\nimport { formatPhoneNumber } from \"../helpers/formatPhoneNumber\";\r\nimport { IS_APPLE, IS_ANDROID, IS_APPLE_MOBILE } from \"../environment/userAgent\";\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class TelInputField extends InputField {\r\n  private pasted = false;\r\n  public lastValue = '';\r\n  \r\n  constructor(options: InputFieldOptions & {\r\n    onInput?: (formatted: ReturnType<typeof formatPhoneNumber>) => void\r\n  } = {}) {\r\n    super({\r\n      label: 'Contacts.PhoneNumber.Placeholder',\r\n      //plainText: true,\r\n      name: 'phone',\r\n      ...options\r\n    });\r\n\r\n    this.container.classList.add('input-field-phone');\r\n\r\n    let telEl = this.input;\r\n    if(telEl instanceof HTMLInputElement) {\r\n      telEl.type = 'tel';\r\n      telEl.autocomplete = 'rr55RandomRR55';\r\n    } else {\r\n      telEl.inputMode = 'decimal';\r\n\r\n      const pixelRatio = window.devicePixelRatio;\r\n      if(pixelRatio > 1) {\r\n        let letterSpacing: number;\r\n        if(IS_APPLE) {\r\n          letterSpacing = pixelRatio * -.16;\r\n        } else if(IS_ANDROID) {\r\n          letterSpacing = 0;\r\n        }\r\n\r\n        telEl.style.setProperty('--letter-spacing', letterSpacing + 'px');\r\n      }\r\n\r\n      const originalFunc = this.setValueSilently.bind(this);\r\n      this.setValueSilently = (value) => {\r\n        originalFunc(value);\r\n        placeCaretAtEnd(this.input, true);\r\n      };\r\n    }\r\n\r\n    telEl.addEventListener('input', () => {\r\n      //console.log('input', this.value);\r\n      telEl.classList.remove('error');\r\n  \r\n      const value = this.value;\r\n      const diff = Math.abs(value.length - this.lastValue.length);\r\n      if(diff > 1 && !this.pasted && IS_APPLE_MOBILE) {\r\n        this.setValueSilently(this.lastValue + value);\r\n      }\r\n  \r\n      this.pasted = false;\r\n  \r\n      this.setLabel();\r\n  \r\n      let formattedPhoneNumber: ReturnType<typeof formatPhoneNumber>;\r\n      let formatted: string, country: HelpCountry, countryCode: HelpCountryCode, leftPattern = '';\r\n      if(this.value.replace(/\\++/, '+') === '+') {\r\n        this.setValueSilently('+');\r\n      } else {\r\n        formattedPhoneNumber = formatPhoneNumber(this.value);\r\n        formatted = formattedPhoneNumber.formatted;\r\n        country = formattedPhoneNumber.country;\r\n        leftPattern = formattedPhoneNumber.leftPattern;\r\n        countryCode = formattedPhoneNumber.code;\r\n        this.setValueSilently(this.lastValue = formatted ? '+' + formatted : '');\r\n      }\r\n  \r\n      telEl.dataset.leftPattern = leftPattern/* .replace(/X/g, '0') */;\r\n  \r\n      //console.log(formatted, country);\r\n\r\n      options.onInput && options.onInput(formattedPhoneNumber);\r\n    });\r\n  \r\n    telEl.addEventListener('paste', () => {\r\n      this.pasted = true;\r\n      //console.log('paste', telEl.value);\r\n    });\r\n  \r\n    /* telEl.addEventListener('change', (e) => {\r\n      console.log('change', telEl.value);\r\n    }); */\r\n  \r\n    telEl.addEventListener('keypress', (e) => {\r\n      //console.log('keypress', this.value);\r\n      const key = e.key;\r\n      if(/\\D/.test(key) && !(e.metaKey || e.ctrlKey) && key !== 'Backspace' && !(key === '+' && e.shiftKey/*  && !this.value */)) {\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n    });\r\n  \r\n    /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n      this.removeAttribute('readonly'); // fix autocomplete\r\n    });*/\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport IS_TOUCH_SUPPORTED from \"../../environment/touchSupport\";\r\n\r\nexport default function placeCaretAtEnd(el: HTMLElement, ignoreTouchCheck = false) {\r\n  if(IS_TOUCH_SUPPORTED && (!ignoreTouchCheck || document.activeElement !== el)) {\r\n    return;\r\n  }\r\n  \r\n  el.focus();\r\n  if(el instanceof HTMLInputElement) {\r\n    const length = el.value.length;\r\n    el.selectionStart = length;\r\n    el.selectionEnd = length;\r\n  } else if(typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\r\n    var range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    // @ts-ignore\r\n  } else if(typeof document.body.createTextRange !== \"undefined\") {\r\n    // @ts-ignore\r\n    var textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}\r\n\r\n(window as any).placeCaretAtEnd = placeCaretAtEnd;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean): () => void {\r\n  if(disable) {\r\n    elements.forEach((el) => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach((el) => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\r\nimport I18n from \"../lib/langPack\";\r\n\r\nlet sortedCountries: HelpCountry[];\r\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\r\nconst prefixes: Map<string, PrefixCountry> = new Map();\r\nlet maxPrefixLength = 0;\r\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\r\n  prefix = code.country_code + prefix;\r\n  /* if(prefixes.has(prefix)) {\r\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\r\n  } */\r\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\r\n  prefixes.set(prefix, {country, code});\r\n};\r\n\r\nexport function formatPhoneNumber(originalStr: string): {\r\n  formatted: string,\r\n  country: HelpCountry,\r\n  code: HelpCountryCode,\r\n  leftPattern: string\r\n} {\r\n  originalStr = originalStr || '';\r\n  \r\n  if(!prefixes.size) {\r\n    I18n.countriesList.forEach((country) => {\r\n      country.country_codes.forEach((code) => {\r\n        if(code.prefixes) {\r\n          code.prefixes.forEach((prefix) => {\r\n            setPrefix(country, code, prefix);\r\n          });\r\n        } else {\r\n          setPrefix(country, code);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\r\n  let str = originalStr.replace(/\\D/g, '');\r\n  let phoneCode = str.slice(0, maxPrefixLength);\r\n  \r\n  ////console.log('str', str, phoneCode);\r\n  // if(!sortedCountries) {\r\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\r\n  // }\r\n  \r\n  // let country = sortedCountries.find((c) => {\r\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\r\n  // });\r\n\r\n  let prefixCountry: PrefixCountry;\r\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\r\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\r\n    if(prefixCountry) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!prefixCountry) {\r\n    return {\r\n      formatted: str, \r\n      country: undefined, \r\n      code: undefined, \r\n      leftPattern: ''\r\n    };\r\n  }\r\n\r\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\r\n  const country = prefixCountry.country;\r\n  \r\n  const patterns = prefixCountry.code.patterns || [];\r\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\r\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\r\n  for(let i = patterns.length - 1; i >= 0; --i) {\r\n    pattern = patterns[i];\r\n\r\n    const _pattern = pattern.replace(/ /g, '');\r\n    let patternMatches = 0;\r\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\r\n      if(searchForPattern[k] === _pattern[k] || _pattern[k] === 'X') {\r\n        ++patternMatches;\r\n      } else {\r\n        patternMatches = 0;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(patternMatches > mostMatchedPatternMatches) {\r\n      mostMatchedPatternMatches = patternMatches;\r\n      mostMatchedPattern = pattern;\r\n    }\r\n  }\r\n\r\n  pattern = mostMatchedPattern || pattern;\r\n  pattern = pattern.replace(/\\d/g, 'X');\r\n\r\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\r\n  // let pattern = country.pattern || country.phoneCode;\r\n  pattern.split('').forEach((symbol, idx) => {\r\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\r\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\r\n    }\r\n  });\r\n  \r\n  /* if(country.pattern) {\r\n    str = str.slice(0, country.pattern.length);\r\n  } */\r\n\r\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\r\n  if(leftPattern) {\r\n    /* const length = str.length;\r\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\r\n    leftPattern = leftPattern.replace(/X/g, '‒');\r\n    // leftPattern = leftPattern.replace(/X/g, '0');\r\n  }\r\n  \r\n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\r\n}\r\n","export default function getDeepProperty(object: any, key: string) {\r\n  const splitted = key.split('.');\r\n  let o: any = object;\r\n  splitted.forEach((key) => {\r\n    if(!key) {\r\n      return;\r\n    }\r\n    \r\n    // @ts-ignore\r\n    o = o[key];\r\n  });\r\n  \r\n  return o;\r\n}\r\n"],"names":["CheckboxField","constructor","options","label","this","document","createElement","classList","add","restriction","round","disabled","toggleDisability","input","type","name","id","checked","stateKey","loaded","onChange","value","stateValues","then","state","stateValue","indexOf","setValueSilently","listenerSetter","addEventListener","span","text","textArgs","append","toggle","box","checkSvg","createElementNS","setAttributeNS","use","bg","border","withRipple","undefined","withHover","event","Event","bubbles","cancelable","dispatchEvent","disable","countries","setCountries","country","pFlags","hidden","sort","a","b","default_name","localeCompare","init","CountryInputField","super","hidePicker","hideTimeout","selectWrapper","remove","window","setTimeout","selectCountryByTarget","target","defaultName","querySelector","dataset","phoneCodeEl","phoneCode","innerText","countryCode","replace","lastCountrySelected","find","c","lastCountryCodeSelected","country_codes","_countryCode","country_code","onCountryChange","liMap","Map","container","arrowDown","selectList","appendChild","initSelect","forEach","emoji","iso2","liArr","i","length","Math","min","noPhoneCodes","Infinity","li","wrapped","spanEmoji","el","push","set","e","button","get","style","display","clearTimeout","offsetWidth","select","element","position","margin","mouseDownHandlerAttached","onMouseDown","capture","removeEventListener","onKeyPress","key","ctrlKey","_value","toLowerCase","matches","names","filter","Boolean","abbr","split","word","test","map","join","good","str","blur","cancelBubble","preventDefault","focus","getSelected","code","selectCountryByIso2","override","countryName","ScrollableBase","logPrefix","onScrollMeasure","lastScrollPosition","lastScrollDirection","isHeavyAnimationInProgress","needCheckAfterAnimation","onScroll","cancelMeasure","onScrolledTop","onScrolledBottom","splitUp","onAdditionalScroll","scrollPosition","scrollProperty","checkForTriggers","log","Array","from","children","addScrollListener","addedScrollListener","passive","removeScrollListener","setListeners","removeHeavyAnimationListener","removeListeners","destroy","scrollIntoViewNew","Scrollable","onScrollOffset","withPaddingContainer","loadedAll","top","bottom","scrollHeight","maxScrollTop","clientHeight","scrollTop","setVirtualContainer","prepend","elements","padding","getDistanceToEnd","offsetHeight","isScrolledDown","y","setScrollTopSilently","ignoreNextScrollEvent","once","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","TelInputField","pasted","lastValue","telEl","HTMLInputElement","autocomplete","inputMode","pixelRatio","devicePixelRatio","letterSpacing","IS_APPLE","IS_ANDROID","setProperty","originalFunc","bind","formattedPhoneNumber","abs","IS_APPLE_MOBILE","setLabel","formatted","leftPattern","onInput","metaKey","shiftKey","findUpTag","tag","closest","placeCaretAtEnd","ignoreTouchCheck","activeElement","selectionStart","selectionEnd","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","setAttribute","removeAttribute","prefixes","maxPrefixLength","setPrefix","prefix","max","formatPhoneNumber","originalStr","size","prefixCountry","slice","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","k","symbol","idx","getDeepProperty","object","splitted","o"],"sourceRoot":""}