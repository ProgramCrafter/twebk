{"version":3,"file":"740.0823929880f55d395470.bundle.js","mappings":"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","sources":["webpack://tweb/./src/config/app.ts","webpack://tweb/./src/config/databases/state.ts","webpack://tweb/./src/config/tabId.ts","webpack://tweb/./src/helpers/blob/blobConstruct.ts","webpack://tweb/./src/helpers/blob/blobSafeMimeType.ts","webpack://tweb/./src/helpers/cancellablePromise.ts","webpack://tweb/./src/helpers/dom/loadScript.ts","webpack://tweb/./src/helpers/noop.ts","webpack://tweb/./src/helpers/object/copy.ts","webpack://tweb/./src/helpers/object/deepEqual.ts","webpack://tweb/./src/helpers/object/isObject.ts","webpack://tweb/./src/helpers/object/safeAssign.ts","webpack://tweb/./src/helpers/object/validateInitObject.ts","webpack://tweb/./src/helpers/peerIdPolyfill.ts","webpack://tweb/./src/helpers/random.ts","webpack://tweb/./src/helpers/recordPromise.ts","webpack://tweb/./src/helpers/schedulers/pause.ts","webpack://tweb/./src/helpers/schedulers/throttle.ts","webpack://tweb/./src/helpers/string/capitalizeFirstLetter.ts","webpack://tweb/./src/helpers/toggleStorages.ts","webpack://tweb/./src/helpers/tsNow.ts","webpack://tweb/./src/lib/appManagers/utils/peers/isAnyChat.ts","webpack://tweb/./src/lib/appManagers/utils/peers/isUser.ts","webpack://tweb/./src/lib/cacheStorage.ts","webpack://tweb/./src/lib/fileManager.ts","webpack://tweb/./src/lib/logger.ts","webpack://tweb/./src/lib/mtproto/mtprotoMessagePort.ts","webpack://tweb/./src/lib/richTextProcessor/matchUrlProtocol.ts","webpack://tweb/./src/lib/richTextProcessor/wrapUrl.ts","webpack://tweb/./src/lib/localStorage.ts","webpack://tweb/./src/lib/sessionStorage.ts","webpack://tweb/./src/lib/stateStorage.ts","webpack://tweb/./src/lib/storage.ts","webpack://tweb/./src/vendor/emoji/regex.ts"],"sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { DcId } from \"../types\";\r\n\r\nexport const MAIN_DOMAIN = 'web.telegram.org';\r\n\r\nconst App = {\r\n  id: +process.env.API_ID,\r\n  hash: process.env.API_HASH,\r\n  version: process.env.VERSION,\r\n  versionFull: process.env.VERSION_FULL,\r\n  build: +process.env.BUILD,\r\n  langPackVersion: '0.4.4',\r\n  langPack: 'macos',\r\n  langPackCode: 'en',\r\n  domains: [MAIN_DOMAIN] as string[],\r\n  baseDcId: 2 as DcId,\r\n  isMainDomain: location.hostname === MAIN_DOMAIN,\r\n  suffix: 'K'\r\n};\r\n\r\nif(App.isMainDomain) { // use Webogram credentials then\r\n  App.id = 2496;\r\n  App.hash = '8da85b0d5bfe62527e5b244c209159c3';\r\n}\r\n\r\nexport default App;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { Database } from '.';\r\nimport type { IDBIndex } from '../../lib/idb';\r\n\r\nconst DATABASE_STATE: Database<'session' | 'stickerSets' | 'users' | 'chats' | 'messages' | 'dialogs'> = {\r\n  name: 'tweb',\r\n  version: 7,\r\n  stores: [{\r\n    name: 'session'\r\n  }, {\r\n    name: 'stickerSets'\r\n  }, {\r\n    name: 'users'\r\n  }, {\r\n    name: 'chats'\r\n  }, {\r\n    name: 'dialogs',\r\n    // indexes: [\r\n    //   ...(new Array(20 + 2).fill(0)).map((_, idx) => {\r\n    //     const name = `index_${idx}`;\r\n    //     const index: IDBIndex = {\r\n    //       indexName: name,\r\n    //       keyPath: name,\r\n    //       objectParameters: {}\r\n    //     };\r\n\r\n    //     return index\r\n    //   })\r\n    // ]\r\n  }, {\r\n    name: 'messages'\r\n  }]\r\n};\r\n\r\nexport default DATABASE_STATE;\r\n","const tabId = Date.now() % Math.random() * 100000000 | 0;\r\nexport default tabId;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport blobSafeMimeType from \"./blobSafeMimeType\";\r\n\r\nexport default function blobConstruct<T extends Uint8Array | string>(blobParts: Array<T> | T, mimeType: string = ''): Blob {\r\n  if(!Array.isArray(blobParts)) {\r\n    blobParts = [blobParts];\r\n  }\r\n\r\n  let blob;\r\n  const safeMimeType = blobSafeMimeType(mimeType);\r\n  try {\r\n    blob = new Blob(blobParts, {type: safeMimeType});\r\n  } catch(e) {\r\n    // @ts-ignore\r\n    let bb = new BlobBuilder;\r\n    blobParts.forEach((blobPart: any) => {\r\n      bb.append(blobPart);\r\n    });\r\n    blob = bb.getBlob(safeMimeType);\r\n  }\r\n  return blob;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n// https://www.iana.org/assignments/media-types/media-types.xhtml\r\nexport default function blobSafeMimeType(mimeType: string) {\r\n  if([\r\n    'image/jpeg',\r\n    'image/png',\r\n    'image/gif',\r\n    'image/svg+xml',\r\n    'image/webp',\r\n    'image/bmp',\r\n    'video/mp4',\r\n    'video/webm',\r\n    'video/quicktime',\r\n    'audio/ogg',\r\n    'audio/mpeg',\r\n    'audio/mp4',\r\n    'audio/wav', // though it is not in list\r\n    'application/json',\r\n    'application/pdf'\r\n  ].indexOf(mimeType) === -1) {\r\n    return 'application/octet-stream';\r\n  }\r\n\r\n  return mimeType;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport noop from \"./noop\";\r\n\r\nexport interface CancellablePromise<T> extends Promise<T> {\r\n  resolve?: (value: T) => void,\r\n  reject?: (...args: any[]) => void,\r\n  cancel?: (reason?: any) => void,\r\n\r\n  notify?: (...args: any[]) => void,\r\n  notifyAll?: (...args: any[]) => void,\r\n  lastNotify?: any,\r\n  listeners?: Array<(...args: any[]) => void>,\r\n  addNotifyListener?: (callback: (...args: any[]) => void) => void,\r\n\r\n  isFulfilled?: boolean,\r\n  isRejected?: boolean\r\n}\r\n\r\nexport default function deferredPromise<T>() {\r\n  let deferredHelper: any = {\r\n    isFulfilled: false, \r\n    isRejected: false,\r\n\r\n    notify: () => {}, \r\n    notifyAll: (...args: any[]) => {\r\n      deferredHelper.lastNotify = args;\r\n      deferredHelper.listeners.forEach((callback: any) => callback(...args));\r\n    }, \r\n\r\n    listeners: [],\r\n    addNotifyListener: (callback: (...args: any[]) => void) => {\r\n      if(deferredHelper.lastNotify) {\r\n        callback(...deferredHelper.lastNotify);\r\n      }\r\n\r\n      deferredHelper.listeners.push(callback);\r\n    }\r\n  };\r\n\r\n  let deferred: CancellablePromise<T> = new Promise<T>((resolve, reject) => {\r\n    deferredHelper.resolve = (value: T) => {\r\n      if(deferred.isFulfilled || deferred.isRejected) return;\r\n\r\n      deferred.isFulfilled = true;\r\n      resolve(value);\r\n    };\r\n    \r\n    deferredHelper.reject = (...args: any[]) => {\r\n      if(deferred.isRejected || deferred.isFulfilled) return;\r\n      \r\n      deferred.isRejected = true;\r\n      reject(...args);\r\n    };\r\n  });\r\n\r\n  // @ts-ignore\r\n  /* deferred.then = (resolve: (value: T) => any, reject: (...args: any[]) => any) => {\r\n    const n = deferredPromise<ReturnType<typeof resolve>>();\r\n    \r\n  }; */\r\n\r\n  deferred.catch(noop).finally(() => {\r\n    deferred.notify = deferred.notifyAll = deferred.lastNotify = null;\r\n    deferred.listeners.length = 0;\r\n\r\n    if(deferred.cancel) {\r\n      deferred.cancel = noop;\r\n    }\r\n  });\r\n\r\n  Object.assign(deferred, deferredHelper);\r\n\r\n  return deferred;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function loadScript(url: string) {\r\n  const script = document.createElement('script');\r\n  const promise = new Promise<HTMLScriptElement>((resolve) => {\r\n    script.onload = script.onerror = () => {\r\n      resolve(script);\r\n    };\r\n  });\r\n  script.src = url;\r\n  document.body.appendChild(script);\r\n  return promise;\r\n}\r\n","export default function noop() {}\r\n","export default function copy<T>(obj: T): T {\r\n  //in case of premitives\r\n  if(obj === null || typeof(obj) !== \"object\") {\r\n    return obj;\r\n  }\r\n \r\n  //date objects should be \r\n  if(obj instanceof Date) {\r\n    return new Date(obj.getTime()) as any;\r\n  }\r\n \r\n  //handle Array\r\n  if(Array.isArray(obj)) {\r\n    // @ts-ignore\r\n    const clonedArr: T = obj.map((el) => copy(el)) as any as T;\r\n    return clonedArr;\r\n  }\r\n \r\n  //lastly, handle objects\r\n  // @ts-ignore\r\n  let clonedObj = new obj.constructor();\r\n  for(var prop in obj){\r\n    if(obj.hasOwnProperty(prop)) {\r\n      clonedObj[prop] = copy(obj[prop]);\r\n    }\r\n  }\r\n  return clonedObj;\r\n}\r\n","export default function deepEqual(x: any, y: any): boolean {\r\n  const ok = Object.keys, tx = typeof x, ty = typeof y;\r\n  return x && y && tx === 'object' && tx === ty ? (\r\n    ok(x).length === ok(y).length &&\r\n      ok(x).every((key) => deepEqual(x[key], y[key]))\r\n  ) : (x === y);\r\n}\r\n","export default function isObject<T extends Record<any, any>>(object: any): object is T {\r\n  return typeof(object) === 'object' && object !== null;\r\n}\r\n","export default function safeAssign<T>(object: T, fromObject: any) {\r\n  if(fromObject) {\r\n    for(let i in fromObject) {\r\n      if(fromObject[i] !== undefined) {\r\n        // @ts-ignore\r\n        object[i] = fromObject[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  return object;\r\n}\r\n","import copy from \"./copy\";\r\nimport isObject from \"./isObject\";\r\n\r\nexport default function validateInitObject(initObject: any, currentObject: any, onReplace?: (key: string) => void, previousKey?: string) {\r\n  for(const key in initObject) {\r\n    if(typeof(currentObject[key]) !== typeof(initObject[key])) {\r\n      currentObject[key] = copy(initObject[key]);\r\n      onReplace && onReplace(previousKey || key);\r\n    } else if(isObject(initObject[key])) {\r\n      validateInitObject(initObject[key], currentObject[key], onReplace, previousKey || key);\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport isAnyChat from \"../lib/appManagers/utils/peers/isAnyChat\";\r\nimport isUser from \"../lib/appManagers/utils/peers/isUser\";\r\n\r\nString.prototype.toUserId = function() {\r\n  return (+this).toUserId();\r\n};\r\n\r\nString.prototype.toChatId = function() {\r\n  return (+this).toChatId();\r\n};\r\n\r\nString.prototype.toPeerId = function(isChat?: boolean) {\r\n  return (+this).toPeerId(isChat);\r\n};\r\n\r\nString.prototype.isPeerId = function() {\r\n  return /^[\\d-]/.test(this.toString());\r\n};\r\n\r\nNumber.prototype.toUserId = function() {\r\n  return this as any;\r\n};\r\n\r\nNumber.prototype.toChatId = function() {\r\n  return Math.abs(this as any);\r\n};\r\n\r\nNumber.prototype.toPeerId = function(isChat?: boolean) {\r\n  return isChat === undefined ? this as number : (isChat ? -Math.abs(this as number) : this as number);\r\n};\r\n\r\nNumber.prototype.isPeerId = function() {\r\n  return true;\r\n};\r\n\r\n[\r\n  ['isUser' as const, isUser],\r\n  ['isAnyChat' as const, isAnyChat],\r\n].forEach((value) => {\r\n  const newMethod = Array.isArray(value) ? value[0] : value;\r\n  const originMethod = Array.isArray(value) ? value[1] : value;\r\n  // @ts-ignore\r\n  String.prototype[newMethod] = function() {\r\n    // @ts-ignore\r\n    return originMethod.call(null, this.toString());\r\n  };\r\n\r\n  // @ts-ignore\r\n  Number.prototype[newMethod] = function() {\r\n    // @ts-ignore\r\n    return originMethod.call(null, this);\r\n  };\r\n});\r\n\r\ndeclare global {\r\n  interface String {\r\n    toUserId(): UserId;\r\n    toChatId(): ChatId;\r\n    toPeerId(isChat?: boolean): PeerId;\r\n    isPeerId(): this is string;\r\n\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n\r\n  interface Number {\r\n    toUserId(): UserId;\r\n    toChatId(): ChatId;\r\n    toPeerId(isChat?: boolean): PeerId;\r\n    isPeerId(): this is PeerId;\r\n\r\n    isUser(): boolean;\r\n    isAnyChat(): boolean;\r\n  }\r\n}\r\n\r\nexport {};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nconst arrays = {\r\n  8: new Uint8Array(1),\r\n  16: new Uint16Array(1),\r\n  32: new Uint32Array(1),\r\n};\r\nexport function nextRandomUint(bits: 8 | 16 | 32) {\r\n  const array = arrays[bits];\r\n  crypto.getRandomValues(array);\r\n  return array[0];\r\n}\r\n\r\nexport function randomLong() {\r\n  return '' + nextRandomUint(32) + nextRandomUint(32) % 0xFFFFFF;\r\n}\r\n","import { logger } from \"../lib/logger\";\r\nimport dT from \"./dT\";\r\n\r\nexport function recordPromise<T extends Promise<any>>(promise: T, description: string, log?: ReturnType<typeof logger> | Console) {\r\n  const perf = performance.now();\r\n  (log || console).warn(dT(), 'start', description);\r\n  promise.then(() => {\r\n    (log || console).warn(dT(), 'end', description, performance.now() - perf);\r\n  });\r\n  return promise;\r\n}\r\n\r\nexport function recordPromiseBound(log: ReturnType<typeof logger> | Console) {\r\n  return (...args: [Parameters<typeof recordPromise>[0], Parameters<typeof recordPromise>[1]]) => {\r\n    return recordPromise(...args, log);\r\n  };\r\n}\r\n","export default function pause(ms: number) {\r\n  return new Promise<void>((resolve) => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}\r\n","// * Jolly Cobra's schedulers\r\n\r\nimport { AnyToVoidFunction } from \"../../types\";\r\n\r\nexport default function throttle<F extends AnyToVoidFunction>(\r\n  fn: F,\r\n  ms: number,\r\n  shouldRunFirst = true,\r\n) {\r\n  let interval: number | null = null;\r\n  let isPending: boolean;\r\n  let args: Parameters<F>;\r\n\r\n  return (..._args: Parameters<F>) => {\r\n    isPending = true;\r\n    args = _args;\r\n\r\n    if(!interval) {\r\n      if(shouldRunFirst) {\r\n        isPending = false;\r\n        // @ts-ignore\r\n        fn(...args);\r\n      }\r\n\r\n      interval = setInterval(() => {\r\n        if (!isPending) {\r\n          clearInterval(interval!);\r\n          interval = null;\r\n          return;\r\n        }\r\n\r\n        isPending = false;\r\n        // @ts-ignore\r\n        fn(...args);\r\n      }, ms) as any;\r\n    }\r\n  };\r\n}\r\n","export default function capitalizeFirstLetter(string: string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport CacheStorageController from \"../lib/cacheStorage\";\r\nimport AppStorage from \"../lib/storage\";\r\nimport sessionStorage from \"../lib/sessionStorage\";\r\nimport noop from \"./noop\";\r\n\r\nexport default function toggleStorages(enabled: boolean, clearWrite: boolean) {\r\n  return Promise.all([\r\n    AppStorage.toggleStorage(enabled, clearWrite),\r\n    CacheStorageController.toggleStorage(enabled, clearWrite),\r\n    sessionStorage.toggleStorage(enabled, clearWrite)\r\n  ]).then(noop, noop);\r\n}\r\n","export default function tsNow(seconds?: true) {\r\n  const t = Date.now();\r\n  return seconds ? t / 1000 | 0 : t;\r\n}\r\n","export default function isAnyChat(peerId: PeerId) {\r\n  return +peerId < 0;\r\n}\r\n","export default function isUser(peerId: PeerId) {\r\n  return +peerId >= 0;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport blobConstruct from '../helpers/blob/blobConstruct';\r\nimport FileManager from './fileManager';\r\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\r\n//import { logger } from './polyfill';\r\n\r\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\r\n\r\nexport default class CacheStorageController {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n\r\n  private useStorage = true;\r\n\r\n  //private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n    \r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public get(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n  }\r\n\r\n  public save(entryName: string, response: Response) {\r\n    // return new Promise((resolve) => {}); // DEBUG\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    /* if(method === 'blob') {\r\n      return Promise.reject();\r\n    } */\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        //console.warn('getFile:', response, fileName);\r\n        throw 'NO_ENTRY_FOUND';\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    //return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob);\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n    \r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject('STORAGE_OFFLINE');\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        //console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public getFileWriter(fileName: string, fileSize: number, mimeType: string) {\r\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, fileSize, (blob) => {\r\n      return this.saveFile(fileName, blob).catch(() => blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    return Promise.all(this.STORAGES.map((storage) => {\r\n      storage.useStorage = enabled;\r\n\r\n      if(!clearWrite) {\r\n        return;\r\n      }\r\n      \r\n      if(!enabled) {\r\n        return storage.deleteAll();\r\n      }\r\n    }));\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport blobConstruct from \"../helpers/blob/blobConstruct\";\r\n\r\nexport class FileManager {\r\n  private blobSupported = true;\r\n  \r\n  constructor() {\r\n    try {\r\n      blobConstruct([], '');\r\n    } catch(e) {\r\n      this.blobSupported = false;\r\n    }\r\n  }\r\n  \r\n  public isAvailable() {\r\n    return this.blobSupported;\r\n  }\r\n  \r\n  public getFakeFileWriter(mimeType: string, size: number, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\r\n    let bytes: Uint8Array = new Uint8Array(size);\r\n    const fakeFileWriter = {\r\n      write: async(part: Uint8Array, offset: number) => {\r\n        if(!this.blobSupported) {\r\n          throw false;\r\n        }\r\n        \r\n        // sometimes file size can be bigger than the prov\r\n        const endOffset = offset + part.byteLength;\r\n        if(endOffset > bytes.byteLength) {\r\n          const newBytes = new Uint8Array(endOffset);\r\n          newBytes.set(bytes, 0);\r\n          bytes = newBytes;\r\n        }\r\n\r\n        bytes.set(part, offset);\r\n      },\r\n      truncate: () => {\r\n        bytes = new Uint8Array();\r\n      },\r\n      trim: (size: number) => {\r\n        bytes = bytes.slice(0, size);\r\n      },\r\n      finalize: (saveToStorage = true) => {\r\n        const blob = blobConstruct(bytes, mimeType);\r\n\r\n        if(saveToStorage && saveFileCallback) {\r\n          saveFileCallback(blob);\r\n        }\r\n        \r\n        return blob;\r\n      },\r\n      getParts: () => bytes,\r\n      replaceParts: (parts: typeof bytes) => {\r\n        bytes = parts;\r\n      }\r\n    };\r\n    \r\n    return fakeFileWriter;\r\n  }\r\n}\r\n\r\nexport default new FileManager();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG from \"../config/debug\";\r\nimport { IS_FIREFOX, IS_SAFARI } from \"../environment/userAgent\";\r\nimport { IS_SERVICE_WORKER, IS_WEB_WORKER } from \"../helpers/context\";\r\nimport dT from \"../helpers/dT\";\r\n\r\nexport enum LogTypes {\r\n  None = 0,\r\n  Error = 1,\r\n  Warn = 2,\r\n  Log = 4,\r\n  Debug = 8\r\n};\r\n\r\nexport const LOG_LEVELS = [LogTypes.None, LogTypes.Error, LogTypes.Warn, LogTypes.Log, LogTypes.Debug];\r\n\r\nconst IS_WEBKIT = IS_SAFARI || IS_FIREFOX;\r\n\r\n// let getCallerFunctionNameFromLine: (line: string) => string;\r\n// if(IS_WEBKIT) {\r\n//   getCallerFunctionNameFromLine = (line) => {\r\n//     const splitted = line.split('@');\r\n//     return splitted[0];\r\n//   };\r\n// } else {\r\n//   getCallerFunctionNameFromLine = (line: string) => {\r\n//     const splitted = line.trim().split(' ');\r\n//     if(splitted.length === 3) {\r\n//       return splitted[1].slice(splitted[1].lastIndexOf('.') + 1);\r\n//     }\r\n//   };\r\n// }\r\n\r\nconst STYLES_SUPPORTED = !IS_WEBKIT;\r\n// const LINE_INDEX = IS_WEBKIT ? 2 : 3;\r\n\r\n// function getCallerFunctionName() {\r\n//   const stack = new Error().stack;\r\n//   const lines = stack.split('\\n');\r\n//   const line = lines[LINE_INDEX] || lines[lines.length - 1];\r\n//   // const match = line.match(/\\.([^\\.]+?)\\s/);\r\n//   // line = match ? match[1] : line.trim();\r\n//   const caller = getCallerFunctionNameFromLine(line) || '<anonymous>';\r\n//   return '[' + caller + ']';\r\n// }\r\n\r\nexport const LOGGER_STYLES = {\r\n  reset: \"\\x1b[0m\",\r\n  bright: \"\\x1b[1m\",\r\n  dim: \"\\x1b[2m\",\r\n  underscore: \"\\x1b[4m\",\r\n  blink: \"\\x1b[5m\",\r\n  reverse: \"\\x1b[7m\",\r\n  hidden: \"\\x1b[8m\",\r\n  // Foreground (text) colors\r\n  fg: {\r\n    black: \"\\x1b[30m\",\r\n    red: \"\\x1b[31m\",\r\n    green: \"\\x1b[32m\",\r\n    yellow: \"\\x1b[33m\",\r\n    blue: \"\\x1b[34m\",\r\n    magenta: \"\\x1b[35m\",\r\n    cyan: \"\\x1b[36m\",\r\n    white: \"\\x1b[37m\"\r\n  },\r\n  // Background colors\r\n  bg: {\r\n    black: \"\\x1b[40m\",\r\n    red: \"\\x1b[41m\",\r\n    green: \"\\x1b[42m\",\r\n    yellow: \"\\x1b[43m\",\r\n    blue: \"\\x1b[44m\",\r\n    magenta: \"\\x1b[45m\",\r\n    cyan: \"\\x1b[46m\",\r\n    white: \"\\x1b[47m\"\r\n  }\r\n};\r\n\r\nexport type Logger = {\r\n  (...args: any[]): void;\r\n  warn(...args: any[]): void;\r\n  info(...args: any[]): void;\r\n  error(...args: any[]): void;\r\n  trace(...args: any[]): void;\r\n  debug(...args: any[]): void;\r\n  assert(...args: any[]): void;\r\n  // log(...args: any[]): void;\r\n  group(...args: any[]): void;\r\n  groupCollapsed(...args: any[]): void;\r\n  groupEnd(...args: any[]): void;\r\n  setPrefix(newPrefix: string): void;\r\n  setLevel(level: 0 | 1 | 2 | 3 | 4): void;\r\n  bindPrefix(prefix: string): Logger;\r\n};\r\n\r\nconst methods: ['debug' | 'info' | 'warn' | 'error' | 'assert' | 'trace'/*  | 'log' */ | 'group' | 'groupCollapsed' | 'groupEnd', LogTypes][] = [\r\n  [\"debug\", LogTypes.Debug], \r\n  [\"info\", LogTypes.Log], \r\n  [\"warn\", LogTypes.Warn], \r\n  [\"error\", LogTypes.Error], \r\n  [\"assert\", LogTypes.Error],\r\n  [\"trace\", LogTypes.Log],\r\n  [\"group\", LogTypes.Log],\r\n  [\"groupCollapsed\", LogTypes.Log],\r\n  [\"groupEnd\", LogTypes.Log]\r\n  // [\"log\", LogTypes.Log]\r\n];\r\n\r\nexport function logger(prefix: string, type: LogTypes = LogTypes.Log | LogTypes.Warn | LogTypes.Error, ignoreDebugReset = false, style = ''): Logger {\r\n  let originalPrefix: string;\r\n  if(!DEBUG && !ignoreDebugReset/*  || true */) {\r\n    type = LogTypes.Error;\r\n  }\r\n\r\n  if(!STYLES_SUPPORTED) {\r\n    style = '';\r\n  } else if(!style) {\r\n    if(IS_SERVICE_WORKER) style = LOGGER_STYLES.fg.yellow;\r\n    else if(IS_WEB_WORKER) style = LOGGER_STYLES.fg.cyan;\r\n  }\r\n\r\n  let originalStyle = style;\r\n  if(style) style = `%s ${style}%s`;\r\n  else style = '%s';\r\n\r\n  //level = LogLevels.log | LogLevels.warn | LogLevels.error | LogLevels.debug\r\n\r\n  const log: Logger = function(...args: any[]) {\r\n    return type & LogTypes.Log && console.log(style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\r\n  } as any;\r\n\r\n  methods.forEach(([method, logType]) => {\r\n    log[method] = function(...args: any[]) {\r\n      return type & logType && console[method](style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\r\n    };\r\n  });\r\n\r\n  log.setPrefix = function(newPrefix: string) {\r\n    originalPrefix = newPrefix;\r\n    prefix = '[' + newPrefix + ']';\r\n  };\r\n\r\n  log.setPrefix(prefix);\r\n\r\n  log.setLevel = function(level: 0 | 1 | 2 | 3 | 4) {\r\n    type = LOG_LEVELS.slice(0, level + 1).reduce((acc, v) => acc | v, 0) as any;\r\n  };\r\n\r\n  log.bindPrefix = function(prefix: string) {\r\n    return logger(`${originalPrefix}] [${prefix}`, type, ignoreDebugReset, originalStyle);\r\n  };\r\n\r\n  return log;\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport type { getEnvironment } from \"../../environment/utils\";\r\nimport type loadState from \"../appManagers/utils/state/loadState\";\r\nimport type { StoragesResults } from \"../appManagers/utils/storages/loadStorages\";\r\nimport type { LocalStorageProxyTask } from \"../localStorage\";\r\nimport type { Awaited } from \"../../types\";\r\nimport type { Mirrors, MirrorTaskPayload, NotificationBuildTaskPayload, TabState } from \"./mtprotoworker\";\r\nimport type toggleStorages from \"../../helpers/toggleStorages\";\r\nimport SuperMessagePort from \"./superMessagePort\";\r\n\r\nexport type MTProtoManagerTaskPayload = {name: string, method: string, args: any[]};\r\n\r\ntype MTProtoBroadcastEvent = {\r\n  event: (payload: {name: string, args: any[]}, source: MessageEventSource) => void\r\n};\r\n\r\nexport default class MTProtoMessagePort<Master extends boolean = true> extends SuperMessagePort<{\r\n  environment: (environment: ReturnType<typeof getEnvironment>) => void,\r\n  crypto: (payload: {method: string, args: any[]}) => Promise<any>,\r\n  state: (payload: {userId: UserId} & Awaited<ReturnType<typeof loadState>> & {storagesResults?: StoragesResults}) => void,\r\n  manager: (payload: MTProtoManagerTaskPayload) => any,\r\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => ReturnType<typeof toggleStorages>,\r\n  serviceWorkerOnline: (online: boolean) => void,\r\n  cryptoPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\r\n  createObjectURL: (blob: Blob) => string,\r\n  tabState: (payload: TabState, source: MessageEventSource) => void,\r\n} & MTProtoBroadcastEvent, {\r\n  convertWebp: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\r\n  convertOpus: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\r\n  localStorageProxy: (payload: LocalStorageProxyTask['payload']) => Promise<any>,\r\n  mirror: (payload: MirrorTaskPayload) => void,\r\n  notificationBuild: (payload: NotificationBuildTaskPayload) => void\r\n} & MTProtoBroadcastEvent, Master> {\r\n  private static INSTANCE: MTProtoMessagePort;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    MTProtoMessagePort.INSTANCE = this;\r\n\r\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.mtprotoMessagePort = this);\r\n  }\r\n\r\n  public static getInstance<Master extends boolean>() {\r\n    return this.INSTANCE as MTProtoMessagePort<Master>;\r\n  }\r\n}\r\n","import { URL_ANY_PROTOCOL_REG_EXP } from \".\";\r\n\r\nexport default function matchUrlProtocol(text: string) {\r\n  return !text ? null : text.match(URL_ANY_PROTOCOL_REG_EXP);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { PHONE_NUMBER_REG_EXP } from \".\";\r\nimport matchUrlProtocol from \"./matchUrlProtocol\";\r\n\r\nexport default function wrapUrl(url: string, unsafe?: number | boolean): {url: string, onclick: string} {\r\n  if(!matchUrlProtocol(url)) {\r\n    url = 'https://' + url;\r\n  }\r\n\r\n  let tgMeMatch, telescoPeMatch, tgMatch;\r\n  let onclick: string;\r\n  /* if(unsafe === 2) {\r\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\r\n  } else  */if((tgMeMatch = url.match(/^(?:https?:\\/\\/)?t(?:elegram)?\\.me\\/(.+)/))) {\r\n    const fullPath = tgMeMatch[1];\r\n\r\n    // second regexp is for phone numbers (t.me/+38050...)\r\n    if(/^\\W/.test(fullPath) && !PHONE_NUMBER_REG_EXP.test(fullPath)) {\r\n      onclick = 'joinchat';\r\n      return {url, onclick};\r\n    }\r\n\r\n    const path = fullPath.split('/');\r\n    switch(path[0]) {\r\n      case 'joinchat':\r\n      case 'addstickers':\r\n      case 'voicechat':\r\n        onclick = path[0];\r\n        break;\r\n\r\n      default:\r\n        if((path[1] && path[1].match(/^\\d+(?:\\?(?:comment|thread)=\\d+)?$/)) || path.length === 1) {\r\n          onclick = 'im';\r\n          break;\r\n        }\r\n\r\n        break;\r\n    }\r\n  } else if((telescoPeMatch = url.match(/^(?:https?:\\/\\/)?telesco\\.pe\\/([^/?]+)\\/(\\d+)/))) {\r\n    onclick = 'im';\r\n  } else if((tgMatch = url.match(/tg:(?:\\/\\/)?(.+?)(?:\\?|$)/))) {\r\n    onclick = 'tg_' + tgMatch[1];\r\n  }/*  else if(unsafe) {\r\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\r\n  } */\r\n\r\n  if(!(window as any)[onclick]) {\r\n    onclick = undefined;\r\n  }\r\n\r\n  return {url, onclick};\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport { IS_WORKER } from '../helpers/context';\r\nimport { WorkerTaskTemplate } from '../types';\r\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\r\n//import { stringify } from '../helpers/json';\r\n\r\nclass LocalStorage<Storage extends Record<string, any>> {\r\n  private prefix = '';\r\n  private cache: Partial<Storage> = {};\r\n  private useStorage = true;\r\n\r\n  constructor(/* private preserveKeys: (keyof Storage)[] */) {\r\n    if(Modes.test) {\r\n      this.prefix = 't_';\r\n    }\r\n  }\r\n\r\n  public get<T extends keyof Storage>(key: T, useCache = true): Storage[T] {\r\n    if(this.cache.hasOwnProperty(key) && useCache) {\r\n      return this.cache[key];\r\n    } else if(this.useStorage) {\r\n      let value: Storage[T];\r\n      try {\r\n        value = localStorage.getItem(this.prefix + key.toString()) as any;\r\n      } catch(err) {\r\n        this.useStorage = false;\r\n      }\r\n\r\n      if(value !== null) {\r\n        try {\r\n          value = JSON.parse(value);\r\n        } catch(err) {\r\n          //console.error(err);\r\n        }\r\n      } else {\r\n        value = undefined;\r\n      }\r\n\r\n      return value;\r\n    }/*  else {\r\n      throw 'something went wrong';\r\n    } */\r\n  }\r\n\r\n  public set(obj: Partial<Storage>, onlyLocal = false) {\r\n    for(const key in obj) {\r\n      if(obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n        this.cache[key] = value;\r\n\r\n        if(this.useStorage && !onlyLocal) {\r\n          try {\r\n            const stringified = JSON.stringify(value);\r\n            localStorage.setItem(this.prefix + key, stringified);\r\n          } catch(err) {\r\n            this.useStorage = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public delete(key: keyof Storage, saveLocal = false) {\r\n    // ! it is needed here\r\n    key = key.toString();\r\n\r\n    if(!saveLocal) {\r\n      delete this.cache[key];\r\n    }\r\n    \r\n    //if(this.useStorage) {\r\n      try {\r\n        localStorage.removeItem(this.prefix + key.toString());\r\n      } catch(err) {\r\n        \r\n      }\r\n    //}\r\n  }\r\n\r\n  /* public clear(preserveKeys: (keyof Storage)[] = this.preserveKeys) {\r\n    // if(this.useStorage) {\r\n      try {\r\n        let obj: Partial<Storage> = {};\r\n        if(preserveKeys) {\r\n          preserveKeys.forEach((key) => {\r\n            const value = this.get(key);\r\n            if(value !== undefined) {\r\n              obj[key] = value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        localStorage.clear();\r\n\r\n        if(preserveKeys) {\r\n          this.set(obj);\r\n        }\r\n      } catch(err) {\r\n\r\n      }\r\n    // }\r\n  } */\r\n\r\n  public clear() {\r\n    const keys: string[] = ['dc', 'server_time_offset', 'xt_instance', 'user_auth', 'state_id', 'k_build'];\r\n    for(let i = 1; i <= 5; ++i) {\r\n      keys.push(`dc${i}_server_salt`);\r\n      keys.push(`dc${i}_auth_key`);\r\n    }\r\n\r\n    for(let key of keys) {\r\n      this.delete(key, true);\r\n    }\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    this.useStorage = enabled;\r\n\r\n    if(!clearWrite) {\r\n      return;\r\n    }\r\n\r\n    if(!enabled) {\r\n      this.clear();\r\n    } else {\r\n      return this.set(this.cache);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface LocalStorageProxyTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'set' | 'get' | 'delete' | 'clear' | 'toggleStorage',\r\n    args: any[]\r\n  }\r\n};\r\n\r\nexport interface LocalStorageProxyTaskResponse extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: any\r\n};\r\n\r\nexport default class LocalStorageController<Storage extends Record<string, any>> {\r\n  private static STORAGES: LocalStorageController<any>[] = [];\r\n  //private log = (...args: any[]) => console.log('[SW LS]', ...args);\r\n  //private log = (...args: any[]) => {};\r\n\r\n  private storage: LocalStorage<Storage>;\r\n\r\n  constructor(/* private preserveKeys: (keyof Storage)[] = [] */) {\r\n    LocalStorageController.STORAGES.push(this);\r\n\r\n    if(!IS_WORKER) {\r\n      this.storage = new LocalStorage(/* preserveKeys */);\r\n    }\r\n  }\r\n\r\n  private async proxy<T>(type: LocalStorageProxyTask['payload']['type'], ...args: LocalStorageProxyTask['payload']['args']): Promise<T> {\r\n    if(IS_WORKER) {\r\n      const port = MTProtoMessagePort.getInstance<false>();\r\n      return port.invoke('localStorageProxy', {type, args});\r\n    }\r\n    \r\n    args = Array.prototype.slice.call(args);\r\n\r\n    // @ts-ignore\r\n    return this.storage[type].apply(this.storage, args as any);\r\n  }\r\n\r\n  public get<T extends keyof Storage>(key: T, useCache?: boolean) {\r\n    return this.proxy<Storage[T]>('get', key, useCache);\r\n  }\r\n\r\n  public set(obj: Partial<Storage>, onlyLocal?: boolean) {\r\n    return this.proxy<void>('set', obj, onlyLocal);\r\n  }\r\n\r\n  public delete(key: keyof Storage, saveLocal?: boolean) {\r\n    return this.proxy<void>('delete', key, saveLocal);\r\n  }\r\n\r\n  public clear(/* preserveKeys?: (keyof Storage)[] */) {\r\n    return this.proxy<void>('clear'/* , preserveKeys */);\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    return this.proxy<void>('toggleStorage', enabled, clearWrite);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { AppInstance } from './mtproto/singleInstance';\r\nimport type { UserAuth } from './mtproto/mtproto_config';\r\nimport type { DcId } from '../types';\r\nimport { MOUNT_CLASS_TO } from '../config/debug';\r\nimport LocalStorageController from './localStorage';\r\n\r\nconst sessionStorage = new LocalStorageController<{\r\n  dc: DcId,\r\n  user_auth: UserAuth,\r\n  state_id: number,\r\n  dc1_auth_key: string,\r\n  dc2_auth_key: string,\r\n  dc3_auth_key: string,\r\n  dc4_auth_key: string,\r\n  dc5_auth_key: string,\r\n  dc1_server_salt: string,\r\n  dc2_server_salt: string,\r\n  dc3_server_salt: string,\r\n  dc4_server_salt: string,\r\n  dc5_server_salt: string,\r\n  server_time_offset: number,\r\n  xt_instance: AppInstance,\r\n  kz_version: 'K' | 'Z',\r\n  tgme_sync: {\r\n    canRedirect: boolean,\r\n    ts: number\r\n  },\r\n  k_build: number\r\n}>(/* ['kz_version'] */);\r\nMOUNT_CLASS_TO.appStorage = sessionStorage;\r\nexport default sessionStorage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { ChatSavedPosition } from './appManagers/appImManager';\r\nimport type { AppDraftsManager } from './appManagers/appDraftsManager';\r\nimport type { State } from '../config/state';\r\nimport { MOUNT_CLASS_TO } from '../config/debug';\r\nimport { LangPackDifference } from '../layer';\r\nimport AppStorage from './storage';\r\nimport DATABASE_STATE from '../config/databases/state';\r\n\r\nclass StateStorage extends AppStorage<{\r\n  chatPositions: {\r\n    [peerId_threadId: string]: ChatSavedPosition\r\n  },\r\n  langPack: LangPackDifference,\r\n  drafts: AppDraftsManager['drafts'],\r\n  user_auth: any, // support old webk format\r\n} & State, typeof DATABASE_STATE> {\r\n  constructor() {\r\n    super(DATABASE_STATE, 'session');\r\n  }\r\n}\r\n\r\nconst stateStorage = new StateStorage();\r\nMOUNT_CLASS_TO.stateStorage = stateStorage;\r\nexport default stateStorage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { Database } from \"../config/databases\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\n//import DATABASE_SESSION from \"../config/databases/session\";\r\nimport deferredPromise, { CancellablePromise } from \"../helpers/cancellablePromise\";\r\nimport { IS_WORKER } from \"../helpers/context\";\r\nimport throttle from \"../helpers/schedulers/throttle\";\r\n//import { WorkerTaskTemplate } from \"../types\";\r\nimport IDBStorage from \"./idb\";\r\n\r\nfunction noop() {}\r\n\r\n/* export interface LocalStorageProxySetTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'set',\r\n    keys: string[],\r\n    values: any[]\r\n  }\r\n};\r\n\r\nexport interface LocalStorageProxyDeleteTask extends WorkerTaskTemplate {\r\n  type: 'localStorageProxy',\r\n  payload: {\r\n    type: 'delete',\r\n    keys: string[]\r\n  }\r\n}; */\r\n\r\nconst THROTTLE_TIME = 16;\r\n\r\n/* Storage extends {[name: string]: any} *//* Storage extends Record<string, any> */\r\nexport default class AppStorage<\r\n  Storage extends Record<string, any>, \r\n  T extends Database<any>\r\n> {\r\n  private static STORAGES: AppStorage<any, Database<any>>[] = [];\r\n  private storage: IDBStorage<T>;//new CacheStorageController('session');\r\n\r\n  //private cache: Partial<{[key: string]: Storage[typeof key]}> = {};\r\n  private cache: Partial<Storage> = {};\r\n  private useStorage: boolean;\r\n  private savingFreezed: boolean;\r\n\r\n  private getPromises: Map<keyof Storage, CancellablePromise<Storage[keyof Storage]>> = new Map();\r\n  private getThrottled: () => void;\r\n\r\n  private keysToSet: Set<keyof Storage> = new Set();\r\n  private saveThrottled: () => void;\r\n  private saveDeferred = deferredPromise<void>();\r\n\r\n  private keysToDelete: Set<keyof Storage> = new Set();\r\n  private deleteThrottled: () => void;\r\n  private deleteDeferred = deferredPromise<void>();\r\n\r\n  constructor(private db: T, private storeName: typeof db['stores'][number]['name']) {\r\n    this.storage = new IDBStorage<T>(db, storeName);\r\n\r\n    if(AppStorage.STORAGES.length) {\r\n      this.useStorage = AppStorage.STORAGES[0].useStorage;\r\n    } else {\r\n      this.useStorage = true;\r\n    }\r\n\r\n    this.savingFreezed = false;\r\n\r\n    AppStorage.STORAGES.push(this);\r\n\r\n    this.saveThrottled = throttle(async() => {\r\n      const deferred = this.saveDeferred;\r\n      this.saveDeferred = deferredPromise();\r\n\r\n      const set = this.keysToSet;\r\n      if(set.size) {\r\n        const keys = Array.from(set.values()) as string[];\r\n        set.clear();\r\n\r\n        const values = keys.map((key) => this.cache[key]);\r\n        try {\r\n          //console.log('setItem: will set', key/* , value */);\r\n          //await this.cacheStorage.delete(key); // * try to prevent memory leak in Chrome leading to 'Unexpected internal error.'\r\n          //await this.storage.save(key, new Response(value, {headers: {'Content-Type': 'application/json'}}));\r\n\r\n          /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\r\n            self.postMessage({\r\n              type: 'localStorageProxy', \r\n              payload: {\r\n                type: 'set',\r\n                keys,\r\n                values\r\n              }\r\n            } as LocalStorageProxySetTask);\r\n          } */\r\n\r\n          await this.storage.save(keys, values);\r\n          //console.log('setItem: have set', key/* , value */);\r\n        } catch(e) {\r\n          //this.useCS = false;\r\n          console.error('[AS]: set error:', e, keys, values);\r\n        }\r\n      }\r\n\r\n      deferred.resolve();\r\n\r\n      if(set.size) {\r\n        this.saveThrottled();\r\n      }\r\n    }, THROTTLE_TIME, false);\r\n\r\n    this.deleteThrottled = throttle(async() => {\r\n      const deferred = this.deleteDeferred;\r\n      this.deleteDeferred = deferredPromise();\r\n\r\n      const set = this.keysToDelete;\r\n      if(set.size) {\r\n        const keys = Array.from(set.values()) as string[];\r\n        set.clear();\r\n\r\n        try {\r\n          /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\r\n            self.postMessage({\r\n              type: 'localStorageProxy', \r\n              payload: {\r\n                type: 'delete',\r\n                keys\r\n              }\r\n            } as LocalStorageProxyDeleteTask);\r\n          } */\r\n\r\n          await this.storage.delete(keys);\r\n        } catch(e) {\r\n          console.error('[AS]: delete error:', e, keys);\r\n        }\r\n      }\r\n\r\n      deferred.resolve();\r\n\r\n      if(set.size) {\r\n        this.deleteThrottled();\r\n      }\r\n    }, THROTTLE_TIME, false);\r\n\r\n    this.getThrottled = throttle(async() => {\r\n      const keys = Array.from(this.getPromises.keys());\r\n\r\n      // const perf = performance.now();\r\n      this.storage.get(keys as string[]).then((values) => {\r\n        for(let i = 0, length = keys.length; i < length; ++i) {\r\n          const key = keys[i];\r\n          const deferred = this.getPromises.get(key);\r\n          if(deferred) {\r\n            // @ts-ignore\r\n            deferred.resolve(this.cache[key] = values[i]);\r\n            this.getPromises.delete(key);\r\n          }\r\n        }\r\n\r\n        // console.log('[AS]: get time', keys, performance.now() - perf);\r\n      }, (error) => {\r\n        if(!['NO_ENTRY_FOUND', 'STORAGE_OFFLINE'].includes(error)) {\r\n          this.useStorage = false;\r\n          console.error('[AS]: get error:', error, keys, storeName);\r\n        }\r\n\r\n        for(let i = 0, length = keys.length; i < length; ++i) {\r\n          const key = keys[i];\r\n          const deferred = this.getPromises.get(key);\r\n          if(deferred) {\r\n            //deferred.reject(error);\r\n            deferred.resolve(undefined);\r\n            this.getPromises.delete(key);\r\n          }\r\n        }\r\n      }).finally(() => {\r\n        if(this.getPromises.size) {\r\n          this.getThrottled();\r\n        }\r\n      });\r\n    }, THROTTLE_TIME, false);\r\n  }\r\n\r\n  public isAvailable() {\r\n    return this.useStorage;\r\n  }\r\n\r\n  public getCache() {\r\n    return this.cache;\r\n  }\r\n\r\n  public getFromCache<T extends keyof Storage>(key: T) {\r\n    return this.cache[key];\r\n  }\r\n\r\n  public setToCache(key: keyof Storage, value: Storage[typeof key]) {\r\n    return this.cache[key] = value;\r\n  }\r\n\r\n  public async get<T extends keyof Storage>(key: T, useCache = true): Promise<Storage[T]> {\r\n    if(this.cache.hasOwnProperty(key) && useCache) {\r\n      return this.getFromCache(key);\r\n    } else if(this.useStorage) {\r\n      const r = this.getPromises.get(key);\r\n      if(r) return r as any;\r\n\r\n      const p = deferredPromise<Storage[T]>();\r\n      this.getPromises.set(key, p as any);\r\n\r\n      this.getThrottled();\r\n\r\n      return p;\r\n    }/*  else {\r\n      throw 'something went wrong';\r\n    } */\r\n  }\r\n\r\n  public getAll() {\r\n    return this.storage.getAll().catch(() => []);\r\n  }\r\n\r\n  public set(obj: Partial<Storage>, onlyLocal = false) {\r\n    //console.log('storageSetValue', obj, callback, arguments);\r\n\r\n    const canUseStorage = this.useStorage && !onlyLocal && !this.savingFreezed;\r\n    for(const key in obj) {\r\n      if(obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n        this.setToCache(key, value);\r\n\r\n        // let perf = /* DEBUG */false ? performance.now() : 0;\r\n        // value = JSON.stringify(value);\r\n\r\n        // if(perf) {\r\n        //   let elapsedTime = performance.now() - perf;\r\n        //   if(elapsedTime > 10) {\r\n        //     console.warn('LocalStorage set: stringify time by JSON.stringify:', elapsedTime, key);\r\n        //   }\r\n        // }\r\n        \r\n        /* perf = performance.now();\r\n        value = stringify(value);\r\n        console.log('LocalStorage set: stringify time by own stringify:', performance.now() - perf); */\r\n\r\n        if(canUseStorage) {\r\n          this.keysToSet.add(key);\r\n          this.keysToDelete.delete(key);\r\n          this.saveThrottled();\r\n        }\r\n      }\r\n    }\r\n\r\n    return canUseStorage ? this.saveDeferred : Promise.resolve();\r\n  }\r\n\r\n  public delete(key: keyof Storage, saveLocal = false) {\r\n    /* if(!this.cache.hasOwnProperty(key)) {\r\n      return;\r\n    } */\r\n\r\n    // ! it is needed here\r\n    key = key.toString();\r\n\r\n    if(!saveLocal) {\r\n      delete this.cache[key];\r\n    }\r\n    \r\n    if(this.useStorage) {\r\n      this.keysToSet.delete(key);\r\n      this.keysToDelete.add(key);\r\n      this.deleteThrottled();\r\n    }\r\n\r\n    return this.useStorage ? this.deleteDeferred : Promise.resolve();\r\n  }\r\n\r\n  public clear(saveLocal = false) {\r\n    if(!saveLocal) {\r\n      for(const i in this.cache) {\r\n        delete this.cache[i];\r\n      }\r\n    }\r\n\r\n    return this.storage.clear().catch(noop);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\r\n    return Promise.all(this.STORAGES.map((storage) => {\r\n      storage.useStorage = enabled;\r\n      \r\n      if(!IS_WORKER || !clearWrite) {\r\n        return;\r\n      }\r\n\r\n      if(!enabled) {\r\n        storage.keysToSet.clear();\r\n        storage.keysToDelete.clear();\r\n        storage.getPromises.forEach((deferred) => deferred.resolve(undefined));\r\n        storage.getPromises.clear();\r\n        return storage.clear(true);\r\n      } else {\r\n        return storage.set(storage.cache);\r\n      }\r\n    })).catch(noop);\r\n  }\r\n\r\n  public static freezeSaving<T extends Database<any>>(callback: () => any, names: T['stores'][number]['name'][]) {\r\n    this.STORAGES.forEach((storage) => storage.savingFreezed = true);\r\n    try {\r\n      callback();\r\n    } catch(err) {\r\n      console.error('freezeSaving callback error:', err);\r\n    }\r\n    this.STORAGES.forEach((storage) => storage.savingFreezed = false);\r\n  }\r\n\r\n  /* public deleteDatabase() {\r\n    return IDBStorage.deleteDatabase().catch(noop);\r\n  } */\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.AppStorage = AppStorage);\r\n","// Copyright Twitter Inc. Licensed under MIT\r\n// https://github.com/twitter/twemoji-parser/blob/master/LICENSE.md\r\n\r\nconst originalString = \"((?:\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\udef1\\ud83c\\udffb\\u200d\\ud83e\\udef2\\ud83c[\\udffc-\\udfff]|\\ud83e\\udef1\\ud83c\\udffc\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\udef1\\ud83c\\udffd\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\udef1\\ud83c\\udffe\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\udef1\\ud83c\\udfff\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1|\\ud83d\\udc6b\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6c\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6d\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc8f\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc91\\ud83c[\\udffb-\\udfff]|\\ud83e\\udd1d\\ud83c[\\udffb-\\udfff]|\\ud83d[\\udc6b-\\udc6d\\udc8f\\udc91]|\\ud83e\\udd1d)|(?:\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1)(?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f?|\\u2696\\ufe0f?|\\u2708\\ufe0f?|\\ud83c[\\udf3e\\udf73\\udf7c\\udf84\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92]|\\ud83e[\\uddaf-\\uddb3\\uddbc\\uddbd])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75]|\\u26f9)(?:(?:\\ud83c[\\udffb-\\udfff]|\\ufe0f?)\\u200d[\\u2640\\u2642]\\ufe0f?)|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc70\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd35\\udd37-\\udd39\\udd3d\\udd3e\\uddb8\\uddb9\\uddcd-\\uddcf\\uddd4\\uddd6-\\udddd])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f?|(?:\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f?\\u200d\\u26a7\\ufe0f?|\\ud83c\\udff3\\ufe0f?\\u200d\\ud83c\\udf08|\\ud83d\\ude36\\u200d\\ud83c\\udf2b\\ufe0f?|\\u2764\\ufe0f?\\u200d\\ud83d\\udd25|\\u2764\\ufe0f?\\u200d\\ud83e\\ude79|\\ud83c\\udff4\\u200d\\u2620\\ufe0f?|\\ud83d\\udc15\\u200d\\ud83e\\uddba|\\ud83d\\udc3b\\u200d\\u2744\\ufe0f?|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f?|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f?|\\ud83d\\ude2e\\u200d\\ud83d\\udca8|\\ud83d\\ude35\\u200d\\ud83d\\udcab|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f?|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f?|\\ud83e\\uddde\\u200d\\u2640\\ufe0f?|\\ud83e\\uddde\\u200d\\u2642\\ufe0f?|\\ud83e\\udddf\\u200d\\u2640\\ufe0f?|\\ud83e\\udddf\\u200d\\u2642\\ufe0f?|\\ud83d\\udc08\\u200d\\u2b1b)|[#*0-9]\\ufe0f??\\u20e3|(?:[©®\\u2122\\u265f]\\ufe0f?)|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u203c\\u2049\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26a7\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f?|(?!\\ufe0e))|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f?|(?!\\ufe0e))|(?:\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd0c\\udd0f\\udd18-\\udd1c\\udd1e\\udd1f\\udd26\\udd30-\\udd39\\udd3d\\udd3e\\udd77\\uddb5\\uddb6\\uddb8\\uddb9\\uddbb\\uddcd-\\uddcf\\uddd1-\\udddd\\udec3-\\udec5\\udef0-\\udef6]|[\\u270a\\u270b]))(?:\\ud83c[\\udffb-\\udfff])?|(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc65\\udb40\\udc6e\\udb40\\udc67\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc73\\udb40\\udc63\\udb40\\udc74\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc77\\udb40\\udc6c\\udb40\\udc73\\udb40\\udc7f|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udc8e\\udc90\\udc92-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\uded5-\\uded7\\udedd-\\udedf\\udeeb\\udeec\\udef4-\\udefc\\udfe0-\\udfeb\\udff0]|\\ud83e[\\udd0d\\udd0e\\udd10-\\udd17\\udd20-\\udd25\\udd27-\\udd2f\\udd3a\\udd3c\\udd3f-\\udd45\\udd47-\\udd76\\udd78-\\uddb4\\uddb7\\uddba\\uddbc-\\uddcc\\uddd0\\uddde-\\uddff\\ude70-\\ude74\\ude78-\\ude7c\\ude80-\\ude86\\ude90-\\udeac\\udeb0-\\udeba\\udec0-\\udec2\\uded0-\\uded9\\udee0-\\udee7]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u267e\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a])|\\ufe0f)\";\r\nexport default originalString;\r\n"],"names":["MAIN_DOMAIN","App","id","hash","version","versionFull","build","langPackVersion","langPack","langPackCode","domains","baseDcId","isMainDomain","location","hostname","suffix","name","stores","Date","now","Math","random","blobConstruct","blobParts","mimeType","blob","Array","isArray","safeMimeType","Blob","type","e","bb","BlobBuilder","forEach","blobPart","append","getBlob","blobSafeMimeType","indexOf","deferredPromise","deferredHelper","isFulfilled","isRejected","notify","notifyAll","args","lastNotify","listeners","callback","addNotifyListener","push","deferred","Promise","resolve","reject","value","catch","finally","length","cancel","Object","assign","loadScript","url","script","document","createElement","promise","onload","onerror","src","body","appendChild","noop","copy","obj","getTime","map","el","clonedObj","constructor","prop","hasOwnProperty","deepEqual","x","y","ok","keys","tx","every","key","isObject","object","safeAssign","fromObject","i","undefined","validateInitObject","initObject","currentObject","onReplace","previousKey","String","prototype","toUserId","this","toChatId","toPeerId","isChat","isPeerId","test","toString","Number","abs","newMethod","originMethod","call","arrays","Uint8Array","Uint16Array","Uint32Array","nextRandomUint","bits","array","crypto","getRandomValues","randomLong","recordPromiseBound","log","description","perf","performance","console","warn","then","recordPromise","pause","ms","setTimeout","throttle","fn","shouldRunFirst","isPending","interval","_args","setInterval","clearInterval","capitalizeFirstLetter","string","charAt","toUpperCase","slice","toggleStorages","enabled","clearWrite","all","tsNow","seconds","t","isAnyChat","peerId","isUser","CacheStorageController","dbName","useStorage","STORAGES","openDatabase","openDbPromise","caches","open","delete","entryName","timeoutOperation","cache","deleteAll","get","match","save","response","put","getFile","fileName","method","saveFile","Response","headers","size","rejected","timeout","res","err","clearTimeout","getFileWriter","fileSize","fakeWriter","static","storage","blobSupported","isAvailable","getFakeFileWriter","saveFileCallback","bytes","fakeFileWriter","write","part","offset","endOffset","byteLength","newBytes","set","truncate","trim","finalize","saveToStorage","getParts","replaceParts","parts","LogTypes","LOG_LEVELS","None","Error","Warn","Log","Debug","STYLES_SUPPORTED","IS_SAFARI","IS_FIREFOX","LOGGER_STYLES","methods","logger","prefix","ignoreDebugReset","style","originalPrefix","originalStyle","logType","setPrefix","newPrefix","setLevel","level","reduce","acc","v","bindPrefix","MTProtoMessagePort","super","INSTANCE","matchUrlProtocol","text","wrapUrl","unsafe","tgMeMatch","telescoPeMatch","tgMatch","onclick","fullPath","path","split","window","LocalStorage","useCache","localStorage","getItem","JSON","parse","onlyLocal","stringified","stringify","setItem","saveLocal","removeItem","clear","toggleStorage","LocalStorageController","proxy","invoke","apply","sessionStorage","StateStorage","stateStorage","AppStorage","db","storeName","getPromises","Map","keysToSet","Set","saveDeferred","keysToDelete","deleteDeferred","savingFreezed","saveThrottled","from","values","error","deleteThrottled","getThrottled","includes","getCache","getFromCache","setToCache","r","p","getAll","canUseStorage","add","names"],"sourceRoot":""}